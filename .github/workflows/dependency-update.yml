name: Dependency Update Check

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-dependencies:
    name: Check and Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '10.11.1'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.18.0'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Check for outdated dependencies
        id: outdated
        run: |
          echo "## Outdated Dependencies Report" >> outdated.md
          echo "" >> outdated.md

          echo "### Production Dependencies" >> outdated.md
          pnpm outdated --prod >> outdated.md || true
          echo "" >> outdated.md

          echo "### Development Dependencies" >> outdated.md
          pnpm outdated --dev >> outdated.md || true

          # Check if there are any outdated packages
          if pnpm outdated --json | jq -e '.[] | length > 0' > /dev/null 2>&1; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi

      - name: Update dependencies
        if: steps.outdated.outputs.has_updates == 'true'
        run: |
          # Update dependencies conservatively (patch and minor only)
          pnpm update --interactive false

          # Run tests to ensure nothing broke
          pnpm test
          pnpm type-check
          pnpm lint

      - name: Create Pull Request
        if: steps.outdated.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'ðŸ”„ Automated Dependency Updates'
          body: |
            ## Automated Dependency Update

            This PR contains automated dependency updates that have passed all tests.

            ### What's Changed
            - Updated dependencies to their latest compatible versions
            - All tests pass âœ…
            - Type checking passes âœ…
            - Linting passes âœ…

            ### Review Checklist
            - [ ] Review the dependency changes in `package.json`
            - [ ] Check for any breaking changes in the updated packages
            - [ ] Verify the application builds successfully
            - [ ] Test critical user flows

            <details>
            <summary>Outdated Dependencies Report</summary>

            ${{ steps.outdated.outputs.report }}

            </details>

            ---
            ðŸ¤– This PR was created automatically by the dependency update workflow.
          branch: automated/dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated
