// Mock for lucide-react icons
const React = require('react');

// Create a simple mock component for each icon
const createMockIcon = name => {
  // Simple functional component instead of forwardRef
  const MockIcon = props => {
    return React.createElement('svg', {
      ...props,
      'data-testid': `lucide-${name}`,
      'aria-label': name,
      xmlns: 'http://www.w3.org/2000/svg',
      width: '24',
      height: '24',
      viewBox: '0 0 24 24',
      fill: 'none',
      stroke: 'currentColor',
      strokeWidth: '2',
      strokeLinecap: 'round',
      strokeLinejoin: 'round',
    });
  };
  MockIcon.displayName = name;
  return MockIcon;
};

// Export commonly used icons
module.exports = {
  Check: createMockIcon('check'),
  X: createMockIcon('x'),
  Menu: createMockIcon('menu'),
  ChevronRight: createMockIcon('chevron-right'),
  ChevronLeft: createMockIcon('chevron-left'),
  ChevronDown: createMockIcon('chevron-down'),
  ChevronUp: createMockIcon('chevron-up'),
  Search: createMockIcon('search'),
  User: createMockIcon('user'),
  Settings: createMockIcon('settings'),
  LogOut: createMockIcon('log-out'),
  Plus: createMockIcon('plus'),
  Trash: createMockIcon('trash'),
  Edit: createMockIcon('edit'),
  Save: createMockIcon('save'),
  Download: createMockIcon('download'),
  Upload: createMockIcon('upload'),
  Copy: createMockIcon('copy'),
  ExternalLink: createMockIcon('external-link'),
  Eye: createMockIcon('eye'),
  EyeOff: createMockIcon('eye-off'),
  Loader2: createMockIcon('loader-2'),
  AlertCircle: createMockIcon('alert-circle'),
  AlertTriangle: createMockIcon('alert-triangle'),
  Info: createMockIcon('info'),
  CheckCircle: createMockIcon('check-circle'),
  XCircle: createMockIcon('x-circle'),
  Loader: createMockIcon('loader'),
  RotateCcw: createMockIcon('rotate-ccw'),
  RotateCw: createMockIcon('rotate-cw'),
  Share2: createMockIcon('share2'),
  MoreVertical: createMockIcon('more-vertical'),
  MoreHorizontal: createMockIcon('more-horizontal'),
  ArrowRight: createMockIcon('arrow-right'),
  ArrowLeft: createMockIcon('arrow-left'),
  ArrowUp: createMockIcon('arrow-up'),
  ArrowDown: createMockIcon('arrow-down'),
  Mail: createMockIcon('mail'),
  Phone: createMockIcon('phone'),
  MapPin: createMockIcon('map-pin'),
  Calendar: createMockIcon('calendar'),
  Clock: createMockIcon('clock'),
  Star: createMockIcon('star'),
  Heart: createMockIcon('heart'),
  Share: createMockIcon('share'),
  Filter: createMockIcon('filter'),
  Sort: createMockIcon('sort'),
  Grid: createMockIcon('grid'),
  List: createMockIcon('list'),
  Columns: createMockIcon('columns'),
  Home: createMockIcon('home'),
  FileText: createMockIcon('file-text'),
  Image: createMockIcon('image'),
  Video: createMockIcon('video'),
  Music: createMockIcon('music'),
  Globe: createMockIcon('globe'),
  Lock: createMockIcon('lock'),
  Unlock: createMockIcon('unlock'),
  Shield: createMockIcon('shield'),
  CreditCard: createMockIcon('credit-card'),
  DollarSign: createMockIcon('dollar-sign'),
  TrendingUp: createMockIcon('trending-up'),
  BarChart: createMockIcon('bar-chart'),
  PieChart: createMockIcon('pie-chart'),
  Activity: createMockIcon('activity'),
  Zap: createMockIcon('zap'),
  Cpu: createMockIcon('cpu'),
  Smartphone: createMockIcon('smartphone'),
  Tablet: createMockIcon('tablet'),
  Monitor: createMockIcon('monitor'),
  Printer: createMockIcon('printer'),
  Camera: createMockIcon('camera'),
  Mic: createMockIcon('mic'),
  Volume: createMockIcon('volume'),
  Wifi: createMockIcon('wifi'),
  Bluetooth: createMockIcon('bluetooth'),
  Battery: createMockIcon('battery'),
  Sun: createMockIcon('sun'),
  Moon: createMockIcon('moon'),
  Cloud: createMockIcon('cloud'),
  Umbrella: createMockIcon('umbrella'),
  // Editor specific icons
  Type: createMockIcon('type'),
  Layout: createMockIcon('layout'),
  Zap: createMockIcon('zap'),
  Briefcase: createMockIcon('briefcase'),
  GraduationCap: createMockIcon('graduation-cap'),
  Quote: createMockIcon('quote'),
  Video: createMockIcon('video'),
  HelpCircle: createMockIcon('help-circle'),
  Folder: createMockIcon('folder'),
  Minus: createMockIcon('minus'),
  MoveVertical: createMockIcon('move-vertical'),
  Move: createMockIcon('move'),
  Building: createMockIcon('building'),
  Twitter: createMockIcon('twitter'),
  Linkedin: createMockIcon('linkedin'),
  Github: createMockIcon('github'),
  Facebook: createMockIcon('facebook'),
  Instagram: createMockIcon('instagram'),
  Youtube: createMockIcon('youtube'),
  Dribbble: createMockIcon('dribbble'),
  Behance: createMockIcon('behance'),
  Portfolio: createMockIcon('portfolio'),
  Award: createMockIcon('award'),
  Target: createMockIcon('target'),
  Users: createMockIcon('users'),
  MessageSquare: createMockIcon('message-square'),
  Send: createMockIcon('send'),
  MessageCircle: createMockIcon('message-circle'),
  Bookmark: createMockIcon('bookmark'),
  BookOpen: createMockIcon('book-open'),
  Code: createMockIcon('code'),
  Palette: createMockIcon('palette'),
  Brush: createMockIcon('brush'),
  Scissors: createMockIcon('scissors'),
  Layers: createMockIcon('layers'),
  Box: createMockIcon('box'),
  Package: createMockIcon('package'),
  Truck: createMockIcon('truck'),
  ShoppingBag: createMockIcon('shopping-bag'),
  ShoppingCart: createMockIcon('shopping-cart'),
  Tag: createMockIcon('tag'),
  Tags: createMockIcon('tags'),
  Percent: createMockIcon('percent'),
  Archive: createMockIcon('archive'),
  Inbox: createMockIcon('inbox'),
  Send: createMockIcon('send'),
  Paperclip: createMockIcon('paperclip'),
  Link: createMockIcon('link'),
  Unlink: createMockIcon('unlink'),
  Circle: createMockIcon('circle'),
  Square: createMockIcon('square'),
  Triangle: createMockIcon('triangle'),
  Hexagon: createMockIcon('hexagon'),
  Octagon: createMockIcon('octagon'),
  Diamond: createMockIcon('diamond'),
  Sparkles: createMockIcon('sparkles'),
  Flame: createMockIcon('flame'),
  Lightbulb: createMockIcon('lightbulb'),
  Rocket: createMockIcon('rocket'),
  // Header-specific icons
  LogIn: createMockIcon('log-in'),
  UserPlus: createMockIcon('user-plus'),
  // Add more icons as needed
};
